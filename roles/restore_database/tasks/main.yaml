- name: Get the hash of the {{ database }}
  stat:
    path: "{{ backup_dir }}/{{ database }}.hash"
  register: old_hash_stat

- name: Create temporary new hash file
  file:
    path: "{{ backup_dir }}/{{ database }}.hash.new"
    state: touch

- name: Create new hash of the {{ database }}
  shell: "sha256sum {{ backup_dir }}/{{ database }} | awk '{print $1}'"
  register: new_hash

- name: Save the new hash to file
  copy:
    content: "{{ new_hash.stdout | trim }}"
    dest: "{{ backup_dir }}/{{ database }}.hash.new"

- name: Get the new hash of the {{ database }}
  stat:
    path: "{{ backup_dir }}/{{ database }}.hash.new"
  register: new_hash_stat

- name: Compare the new and old hash files
  ignore_errors: True
  command: "diff -Z {{ backup_dir }}/{{ database }}.hash {{ backup_dir }}/{{ database }}.hash.new"
  changed_when: false
  register: diff_output

- name: Fail if the hashes differ
  fail:
    msg: "The old and new hashes differ for {{ database }}"
  when: diff_output.rc != 0

- name: Delete old hash file
  file:
    path: "{{ backup_dir }}/{{ database }}.hash.new"
    state: absent

- name: Backup the present {{ database_name }} database
  community.docker.docker_container_exec:
    container: mariadb
    command: "mysqldump -u ansible -p{{ mariadb_password }} {{ database_name }}"
  register: backup_before_restore_dump

- name: Save the present {{ database_name }} dump to the file
  copy:
    content: "{{ backup_before_restore_dump.stdout }}"
    dest: "{{ backup_dir }}/backup_before_restore/{{ database_name }}_dump.sql"

- name: Drop the present {{ database_name }} database
  community.docker.docker_container_exec:
    container: mariadb
    command: "mysql -u ansible -p{{ mariadb_password }} -e \"DROP DATABASE IF EXISTS {{ database_name }}\""
  register: database_deletion

- name: Create new {{ database_name }} database
  community.docker.docker_container_exec:
    container: mariadb
    command: "mysql -u ansible -p{{ mariadb_password }} -e \"CREATE DATABASE {{ database_name }}\""

- name: Restore {{ database_name }} database from the {{ database }} file
  shell: "sudo docker exec -i mariadb mysql -u ansible -p{{ mariadb_password }} {{ database_name }} < {{ backup_dir }}/{{ database }}"