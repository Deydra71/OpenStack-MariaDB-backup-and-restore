- name: Get the hash of the {{ database }}
  stat:
    path: "{{ backup_dir }}/{{ database }}.hash"
  register: old_hash_stat

- name: Create temporary new hash file
  file:
    path: "{{ backup_dir }}/{{ database }}.hash.new"
    state: touch

- name: Create new hash of the {{ database }}
  shell: "sha256sum {{ backup_dir }}/{{ database }} | awk '{print $1}'"
  register: new_hash

- name: Save the new hash to file
  copy:
    content: "{{ new_hash.stdout }}"
    dest: "{{ backup_dir }}/{{ database }}.hash.new"

- name: Get the new hash of the {{ database }}
  stat:
    path: "{{ backup_dir }}/{{ database }}.hash.new"
  register: new_hash_stat

- name: Compare the new and old hash files
  ignore_errors: True
  command: "diff {{ backup_dir }}/{{ database }}.hash {{ backup_dir }}/{{ database }}.hash.new"
  changed_when: false
  failed_when: true
  register: diff_output

- name: Fail if the hashes differ
  fail:
    msg: "The old and new hashes differ for {{ database }}"
  when: diff_output.rc != 0

- name: Delete old hash file
  file:
    path: "{{ backup_dir }}/{{ database }}.hash.new"
    state: absent
  changed_when: false
