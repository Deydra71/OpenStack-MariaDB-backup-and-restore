- name: Dump the {{ database }} database
  community.docker.docker_container_exec:
    container: mariadb
    command: "mysqldump -u ansible -p{{ mariadb_password }} {{ database }}"
  become: true
  register: dump_output

- name: Save the {{ database }} dump to the file
  copy:
    content: "{{ dump_output.stdout }}"
    dest: "{{ backup_dir }}/{{ database }}_dump.sql"

- name: Create hash for {{ database }} dump file
  shell: "sha256sum {{ backup_dir }}/{{ database }}_dump.sql | awk '{print $1}'"
  register: dump_hash

- name: Create {{ database }} dump hash file
  file:
    path: "{{ backup_dir }}/{{ database }}_dump.sql.hash"
    state: touch

- name: Save {{ database }} dump hash to file
  copy:
    content: "{{ dump_hash.stdout | trim }}"
    dest: "{{ backup_dir }}/{{ database }}_dump.sql.hash"

- name: Set the hash file to readable only
  file:
    path: "{{ backup_dir }}/{{ database }}_dump.sql"

- name: Create the backup directory on the storage server
  ansible.builtin.file:
    path: "/tmp/{{ backup_dir_created.stdout }}"
    state: directory
    delegate_to: "{{ storage }}"
    storage_user: "{{ storage_user }}"
    ssh_pass: "{{ storage_password }}"
  when: storage is defined and backup_dir_created is defined

- name: Copy the dump files to the storage server
  ansible.builtin.copy:
    src: "{{ backup_dir }}/{{ item }}_dump.sql"
    dest: "/tmp/{{ backup_dir_created.stdout }}/{{ item }}_dump.sql"
    delegate_to: "{{ storage }}"
    storage_user: "{{ storage_user }}"
    ssh_pass: "{{ ssh_password }}"
  with_items: "{{ available_databases }}"
  when: storage is defined and backup_dir_created is defined