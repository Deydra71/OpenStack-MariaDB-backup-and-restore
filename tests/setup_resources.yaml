---
- name: Set up OpenStack resources
  hosts: controller
  gather_facts: no
  tasks:
    - name: Create projects
      openstack.cloud.project:
        cloud: openstack-1-2-1
        endpoint_type: admin
        state: present
        name: "{{ item }}"
        enabled: True
      loop:
        - project1
        - project2

    - name: Create users
      openstack.cloud.identity_user:
        cloud: openstack-1-2-1
        name: "{{ item }}"
        password: "{{ item }}_password"
      loop:
        - user1
        - user2

    - name: Set up user access rights
      openstack.cloud.role_assignment:
        cloud: openstack-1-2-1
        role: "_member_"
        user: "{{ item.user }}"
        project: "{{ item.project }}"
      loop:
        - { user: 'user1', project: 'project1' }
        - { user: 'user2', project: 'project2' }

    - name: Create networks
      openstack.cloud.network:
        cloud: openstack-1-2-1
        name: "net_{{ item }}"
      register: networks_result
      loop:
        - project1
        - project2

    - name: Create subnets
      openstack.cloud.subnet:
        cloud: openstack-1-2-1
        name: "subnet_{{ item.network['name'] }}"
        network_name: "{{ item.network['name'] }}"
        cidr: "{{ item.cidr }}"
      loop:
        - { network: "{{ networks_result.results[0]['network'] }}", cidr: '192.168.1.0/24' }
        - { network: "{{ networks_result.results[1]['network'] }}", cidr: '192.168.2.0/24' }

    - name: Create routers
      openstack.cloud.router:
        cloud: openstack-1-2-1
        name: "router_{{ item }}"
      register: routers_result
      loop:
        - project1
        - project2

    - name: Attach routers to subnets
      openstack.cloud.router:
        cloud: openstack-1-2-1
        name: "{{ item.router.name }}"
        interfaces:
          - net: "net_{{ item.router.name.split('_')[1] }}"
            subnet: "subnet_net_{{ item.router.name.split('_')[1] }}"
      loop:
        - { router: "{{ routers_result.results[0].router }}" }
        - { router: "{{ routers_result.results[1].router }}" }

    - name: Create security group
      openstack.cloud.security_group:
        cloud: openstack-1-2-1
        name: test_security_group
        description: Test security group

    - name: Add rules to security group
      openstack.cloud.security_group_rule:
        cloud: openstack-1-2-1
        security_group: test_security_group
        protocol: "{{ item.protocol }}"
        direction: "{{ item.direction }}"
        port_range_min: "{{ item.port_range_min }}"
        port_range_max: "{{ item.port_range_max }}"
      loop:
        - { protocol: 'icmp', direction: 'ingress', port_range_min: -1, port_range_max: -1 }
        - { protocol: 'tcp', direction: 'ingress', port_range_min: 22, port_range_max: 22 }

    - name: Create keypair
      openstack.cloud.keypair:
        cloud: openstack-1-2-1
        name: cirros_keypair

    - name: Create a minimal flavor
      openstack.cloud.compute_flavor:
        cloud: openstack-1-2-1
        name: minimal_flavor
        ram: 512
        vcpus: 1
        disk: 1
      register: minimal_flavor_result

    # Commented as there is problem with Glance service and any instance cannot be created ATM
    # - name: Create an instance with the minimal flavor
    #   openstack.cloud.server:
    #     cloud: openstack-1-2-1
    #     name: test_cirros_instance
    #     image: cirros
    #     flavor: "{{ minimal_flavor_result.flavor.id }}"
    #     key_name: cirros_keypair
    #     network: net_project1
    #     security_groups:
    #       - test_security_group
    #     auto_ip: yes