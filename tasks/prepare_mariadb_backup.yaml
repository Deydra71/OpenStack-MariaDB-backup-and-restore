---
- name: Create backup directory with timestamp
  command: "mkdir /tmp/{{ ansible_date_time.date }}_{{ ansible_date_time.time }}"
  register: backup_dir_created

- name: Fail if backup directory creation failed
  fail:
    msg: "Failed to create backup directory"
  when: backup_dir_created.rc != 0

- name: Check if any database is selected for the backup
  fail:
    msg: "No database selected for backup. Please provide a value for selected_databases in the Variables box."
  when: selected_databases is not defined

- name: Check if Docker is installed
  stat:
    path: /usr/bin/docker
  register: docker_installed
  failed_when: docker_installed.stat.exists == False

- name: Check if MariaDB container is running
  docker_container_info:
    name: mariadb
  register: mariadb_container_info
  failed_when: mariadb_container_info is not defined or
                mariadb_container_info.container.State.Status != "running"

- name: Get a list of available databases
  community.docker.docker_container_exec:
    container: mariadb
    command: "mysql -u ansible -p{{ mariadb_password }} -e 'SHOW DATABASES;'"
  register: db_output

- name: Extract the list of databases from the output
  set_fact:
    available_databases: "{{ db_output.stdout | split('Database') | last | split('\n') | map('trim') | select | list }}"

- name: Dump selected database(s)
  block:
  - name: Dump Cinder database
    include_role:
      name: ../roles/database_roles/cinder
    vars:
      database: cinder
      backup_dir: "{{ backup_path }}/{{ ansible_date_time.date }}_{{ ansible_date_time.time }}"
    when: "'cinder' in selected_databases or 'all' in selected_databases"

  - name: Dump Glance database
    include_role:
      name: ../roles/database_roles/glance
    vars:
      database: glance
      backup_dir: "{{ backup_path }}/{{ ansible_date_time.date }}_{{ ansible_date_time.time }}"
    when: "'glance' in selected_databases or 'all' in selected_databases"

  - name: Dump Heat database
    include_role:
      name: ../roles/database_roles/heat
    vars:
      database: heat
      backup_dir: "{{ backup_path }}/{{ ansible_date_time.date }}_{{ ansible_date_time.time }}"
    when: "'heat' in selected_databases or 'all' in selected_databases"

  - name: Dump Keystone database
    include_role:
      name: ../roles/database_roles/keystone
    vars:
      database: keystone
      backup_dir: "{{ backup_path }}/{{ ansible_date_time.date }}_{{ ansible_date_time.time }}"
    when: "'keystone' in selected_databases or 'all' in selected_databases"

  - name: Dump Neutron database
    include_role:
      name: ../roles/database_roles/neutron
    vars:
      database: neutron
      backup_dir: "{{ backup_path }}/{{ ansible_date_time.date }}_{{ ansible_date_time.time }}"
    when: "'neutron' in selected_databases or 'all' in selected_databases"

  - name: Dump Nova database
    include_role:
      name: ../roles/database_roles/nova
    vars:
      database: nova
      backup_dir: "{{ backup_path }}/{{ ansible_date_time.date }}_{{ ansible_date_time.time }}"
    when: "'nova' in selected_databases or 'all' in selected_databases"

  - name: Dump Nova API database
    include_role:
      name: ../roles/database_roles/nova_api
    vars:
      database: nova_api
      backup_dir: "{{ backup_path }}/{{ ansible_date_time.date }}_{{ ansible_date_time.time }}"
    when: "'nova_api' in selected_databases or 'all' in selected_databases"

  - name: Dump Nova Cell0 database
    include_role:
      name: ../roles/database_roles/nova_cell0
    vars:
      database: nova_cell0
      backup_dir: "{{ backup_path }}/{{ ansible_date_time.date }}_{{ ansible_date_time.time }}"
    when: "'nova_cell0' in selected_databases or 'all' in selected_databases"

  - name: Dump Placement database
    include_role:
      name: ../roles/database_roles/placement
    vars:
      database: placement
      backup_dir: "{{ backup_path }}/{{ ansible_date_time.date }}_{{ ansible_date_time.time }}"
    when: "'placement' in selected_databases or 'all' in selected_databases"
